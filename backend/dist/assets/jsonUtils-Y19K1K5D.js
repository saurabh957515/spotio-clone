import{gZ as m,g_ as c,g$ as p,h0 as C,V as f,h1 as $,h2 as x,bT as d,ax as S,h3 as L,ct as g,h4 as M,s as y,ar as D,aq as v,e1 as F,as as T,at as U,h5 as z,h6 as E,h7 as w,h8 as I}from"./index-IeegpAPg.js";import{S as P,u as V,c as W}from"./defaults-Ca7Ezrxv.js";import{e as j,i as q}from"./defaultsJSON-GKolV7NZ.js";m.fromSimpleMarkerSymbol(P);c.fromSimpleLineSymbol(V);p.fromSimpleFillSymbol(W);new C({symbolLayers:new f([new $({material:{color:j},edges:new x({size:d(1),color:new S(q)})})])});const Z=new c({symbolLayers:new f([new L({material:{color:new S([0,0,0])},size:d(1)})])}),_=new p({symbolLayers:new f([new $({outline:{color:new S([0,0,0]),size:d(1)}})])}),u="#useCIMFallbackSymbology()",a={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function A(e,l=a){if(!e)return{symbol:null};const{retainId:r=a.retainId,ignoreDrivers:n=a.ignoreDrivers,hasLabelingContext:s=a.hasLabelingContext,retainCIM:i=a.retainCIM,cimFallbackEnabled:t=a.cimFallbackEnabled}=l;let o=null;if(g(e)||e instanceof M)o=e.clone();else if(e.type==="cim"){const b=e.data?.symbol?.type;switch(b){case"CIMPointSymbol":o=i?e.clone():m.fromCIMSymbol(e);break;case"CIMLineSymbol":t&&(o=Z.clone(),l?.logWarning?.(u,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":t&&(o=_.clone(),l?.logWarning?.(u,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!o)return{error:new y("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${b||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof D)o=c.fromSimpleLineSymbol(e);else if(e instanceof v)o=m.fromSimpleMarkerSymbol(e);else if(e instanceof F)o=m.fromPictureMarkerSymbol(e);else if(e instanceof T)o=l.geometryType&&l.geometryType==="mesh"?C.fromSimpleFillSymbol(e):p.fromSimpleFillSymbol(e);else{if(!(e instanceof U))return{error:new y("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};o=s?z.fromTextSymbol(e):m.fromTextSymbol(e)}return r&&o&&o.type!=="cim"&&(o.id=e.id),n&&g(o)&&o.symbolLayers.forEach(b=>b.ignoreDrivers=!0),{symbol:o}}function K(e,l,r,n){const s=k(e,{},{context:n,isLabelSymbol:!1});s!=null&&(l[r]=s)}function N(e,l,r,n){const s=k(e,{},{context:n,isLabelSymbol:!0});s!=null&&(l[r]=s)}function h(e){return e instanceof I||e instanceof M}function B(e){return e instanceof I&&(e.type==="polygon-3d"||e.type==="line-3d")}function k(e,l,r){if(e==null)return null;const{context:n,isLabelSymbol:s}=r,i=n?.origin,t=n?.messages;if(i==="web-scene"&&!h(e)){const o=A(e,{retainCIM:!0,hasLabelingContext:s});return o.symbol!=null?o.symbol.write(l,n):(t?.push(new y("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:n,error:o.error})),null)}return w(n?.layer)&&B(e)?(t?.push(new y("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported on layers of type '${n?.layer?.declaredClass}'.`,{symbol:e,context:n})),null):(i==="web-map"||i==="portal-item"&&!w(n?.layer))&&h(e)?(t?.push(new y("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:n})),null):e.write(l,n)}function O(e,l){return E(e,null,l)}export{N as i,K as l,O as p};
