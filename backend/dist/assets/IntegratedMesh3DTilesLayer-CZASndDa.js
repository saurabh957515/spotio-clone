import{dV as V,dW as D,dX as X,dY as j,aX as w,bk as b,e3 as _,de as u,dg as U,dj as p,dB as $,dk as I,cT as E,cQ as L,e4 as M,e5 as S,e6 as m,s as z,bg as T,aQ as k,n as R,v as c,w as f,e7 as W,d$ as P,x as F,cV as g,e2 as G}from"./index-IeegpAPg.js";import{i as q}from"./APIKeyMixin-Bid8LsFN.js";import{l as K}from"./ArcGISService-CIVcan3f.js";import{e as Q}from"./CustomParametersMixin-seLw3Ail.js";import{$ as N,Z as B,w as O}from"./elevationInfoUtils-B_iUzxp9.js";let y=class extends K(V(D(X(j(Q(q(G))))))){constructor(i){super(i),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new w({wkid:4326,vcsWkid:115700}),this.fullExtent=new b(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(i){this._set("elevationInfo",i),this._validateElevationInfo()}_verifyArray(i,r){if(!Array.isArray(i)||i.length<r)return!1;for(const o of i)if(typeof o!="number")return!1;return!0}_initFullExtent(i){const r=i.root?.boundingVolume;if(!r)return;if(r.box){const t=r?.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=i.root?.transform,x=g();if(r.region&&this._verifyArray(r.region,6)){const t=r.region,l=_(t[0]),n=_(t[1]),a=t[4],s=_(t[2]),e=_(t[3]),d=t[5];this.fullExtent=new b({xmin:l,ymin:n,zmin:a,xmax:s,ymax:e,zmax:d,spatialReference:this.spatialReference})}else if(r.sphere&&this._verifyArray(r.sphere,4)){const t=r.sphere,l=u(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),a=g();U(a,l,u(n,n,n));const s=g();if(p(s,l,u(n,n,n)),o&&this._verifyArray(o,16)){const v=o;$(x,a,v),I(a,x),$(x,s,v),I(s,x)}E(a,L,0,a,w.WGS84,0),E(s,L,0,s,w.WGS84,0);const e=g(),d=g();M(e,a,s),S(d,a,s),this.fullExtent=new b({xmin:e[0],ymin:e[1],zmin:e[2],xmax:d[0],ymax:d[1],zmax:d[2],spatialReference:this.spatialReference})}else if(r.box&&this._verifyArray(r.box,12)){const t=r.box,l=u(t[0],t[1],t[2]),n=u(t[3],t[4],t[5]),a=u(t[6],t[7],t[8]),s=u(t[9],t[10],t[11]),e=[];for(let h=0;h<8;++h)e.push(g());if(p(e[0],l,n),p(e[0],e[0],a),p(e[0],e[0],s),m(e[1],l,n),p(e[1],e[1],a),p(e[1],e[1],s),p(e[2],l,n),m(e[2],e[2],a),p(e[2],e[2],s),m(e[3],l,n),m(e[3],e[3],a),p(e[3],e[3],s),p(e[4],l,n),p(e[4],e[4],a),m(e[4],e[4],s),m(e[5],l,n),p(e[5],e[5],a),m(e[5],e[5],s),p(e[6],l,n),m(e[6],e[6],a),m(e[6],e[6],s),m(e[7],l,n),m(e[7],e[7],a),m(e[7],e[7],s),o&&this._verifyArray(o,16)){const h=o;for(let A=0;A<8;++A)$(e[A],e[A],h)}const d=u(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=u(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let h=0;h<8;++h)E(e[h],L,0,e[h],w.WGS84,0),M(v,v,e[h]),S(d,d,e[h]);this.fullExtent=new b({xmin:v[0],ymin:v[1],zmin:v[2],xmax:d[0],ymax:d[1],zmax:d[2],spatialReference:this.spatialReference})}}async load(i){return this.addResolvingPromise(this._doLoad(i)),this}async _doLoad(i){const r=i!=null?i.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new z("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},i)}catch(o){T(o)}this.url&&await k(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(x=>{this._initFullExtent(x.data)},x=>{T(x)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const i=this.elevationInfo,r="Integrated mesh 3d tiles layers";N(R.getLogger(this),B(r,"absolute-height",i)),N(R.getLogger(this),O(r,i))}};c([f({type:["IntegratedMesh3DTilesLayer"]})],y.prototype,"operationalLayerType",void 0),c([f({type:w})],y.prototype,"spatialReference",void 0),c([f({type:b})],y.prototype,"fullExtent",void 0),c([f(W)],y.prototype,"elevationInfo",null),c([f({type:["show","hide"]})],y.prototype,"listMode",void 0),c([f(P)],y.prototype,"url",void 0),c([f({readOnly:!0})],y.prototype,"type",void 0),c([f({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],y.prototype,"path",void 0),c([f({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],y.prototype,"minScale",void 0),c([f({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],y.prototype,"maxScale",void 0),y=c([F("esri.layers.IntegratedMesh3DTilesLayer")],y);const ee=y;export{ee as default};
