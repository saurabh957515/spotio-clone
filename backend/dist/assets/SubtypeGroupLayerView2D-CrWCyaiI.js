import{v as a,x as n,y as d,P as u,X as l}from"./index-IeegpAPg.js";import{r as g}from"./FeatureLayerView2D-CypG8KMD.js";import"./Container-C2qpHSCx.js";import"./featureConversionUtils-6nDzGVaS.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureEffect-nunlOgL-.js";import"./timeSupport-D2DyNZmJ.js";import"./FeatureSet--t3TP_gY.js";import"./LayerView-DUaSkTLa.js";import"./layerViewUtils-CjvtRAuv.js";import"./TechniqueInstance-CgrhW6QY.js";import"./UpdateTracking2D-gAJU1rbE.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-B6ZhES5h.js";import"./enums-CmIX1y88.js";import"./utils-DyJ7tXUW.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CjQSsSXf.js";import"./Program-vCUOXcd1.js";import"./BufferObject-Bnu6dY3p.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Ca7Ezrxv.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-ByG6sjfF.js";import"./vec42-DVf6basU.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-yPPHUNSb.js";import"./WGLContainer-CL3kB6Gn.js";import"./VertexArrayObject-CJcekOdQ.js";import"./ProgramTemplate-XgYhCHLK.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CcrO3amX.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-C9JHxA_m.js";import"./labelingInfo-COg3pKpK.js";import"./labelUtils-cNe8bNWP.js";import"./jsonUtils-Y19K1K5D.js";import"./heatmapUtils-gC4I9bES.js";import"./SDFHelper-CCmbfpDj.js";import"./floatRGBA-CWXyMtGj.js";import"./HighlightCounter-Czi-fdpx.js";import"./floorFilterUtils-DKzVzLpH.js";import"./popupUtils-D69QEmmC.js";import"./RefreshableLayerView-BxWjWyH0.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ui=i;export{ui as default};
