import{P as m,$ as o}from"./utils-DmG_qk4T.js";import{eL as c,eM as p,eO as i,eN as u}from"./index-IeegpAPg.js";import"./originUtils-CPX8CCAY.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./jsonContext-BVLwkilL.js";import"./saveUtils-CkSwW6BN.js";const s="Image Service",g="imagery-layer-save",v="imagery-layer-save-as",f="imagery-tile-layer-save",d="imagery-tile-layer-save-as";function y(r){if(r.type==="imagery")return{isValid:!0};const{raster:e}=r,a=e?.datasetFormat==="Function"?e.primaryRasters?.rasters[0]:e;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function l(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function T(r,e){const{parsedUrl:a,title:t,fullExtent:n}=r;e.url=a.path,e.title||=t;try{e.extent=await c(n)}catch{e.extent=void 0}p(e,i.METADATA),u(e,i.TILED_IMAGERY,r.type==="imagery-tile")}async function D(r,e){const a=r.type==="imagery"?g:f;return m({layer:r,itemType:s,validateLayer:y,createItemData:l,errorNamePrefix:a},e)}async function E(r,e,a){const t=r.type==="imagery"?v:d;return o({layer:r,itemType:s,validateLayer:y,createItemData:l,errorNamePrefix:t,newItem:e,setItemProperties:T},a)}export{D as save,E as saveAs};
