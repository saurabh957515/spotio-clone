import{dk as j,gm as q,e3 as M,gn as k,go as z,gp as B,g8 as I,v as s,w as i,x as V,bM as C,cV as D,gq as F,de as G,df as l,gr as H,dz as P,fV as T}from"./index-IeegpAPg.js";import{e as x}from"./mat4f64-CSKppSlJ.js";import{v as N,b as p,x as U}from"./quat-DNoYUhoj.js";import{e as g}from"./quatf64-aQ5IuZRd.js";function a(t=w){return[t[0],t[1],t[2],t[3]]}function c(t,o,n=a()){return j(n,t),n[3]=o,n}function Q(t,o=a()){const n=q(e,t);return v(o,M(N(o,n))),o}function y(t,o,n=a()){return p(e,t,h(t)),p(A,o,h(o)),U(e,A,e),v(n,M(N(n,e)))}function R(t,o,n,m=a()){return c(k,t,u),c(z,o,$),c(B,n,d),y(u,$,u),y(u,d,m),m}function S(t){return t}function E(t){return t[3]}function h(t){return I(t[3])}function v(t,o){return t[3]=o,t}const w=[0,0,1,0],e=g(),A=g();a();const u=a(),$=a(),d=a();var f;let r=f=class extends C{constructor(t){super(t),this.translation=D(),this.rotationAxis=F(w),this.rotationAngle=0,this.scale=G(1,1,1)}get rotation(){return c(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(t),this.rotationAngle=E(t)}get localMatrix(){const t=x();return p(b,this.rotation,h(this.rotation)),H(t,b,this.translation,this.scale),t}get localMatrixInverse(){return P(x(),this.localMatrix)}equals(t){return this===t||t!=null&&T(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new f(t)}};s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"translation",void 0),s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAxis",void 0),s([i({type:Number,nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAngle",void 0),s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"scale",void 0),s([i()],r.prototype,"rotation",null),s([i()],r.prototype,"localMatrix",null),s([i()],r.prototype,"localMatrixInverse",null),r=f=s([V("esri.geometry.support.MeshTransform")],r);const b=g(),W=r;export{W as N,R as d,a as j,Q as k,S as w,h as z};
