import{I as m,dP as f,aQ as c,cp as p,em as s,d0 as y,m as S,bC as l}from"./index-IeegpAPg.js";import{t as R}from"./query-CucHdm2a.js";import g from"./BinsQuery-DyYuFh54.js";import{d}from"./FeatureSet--t3TP_gY.js";import"./pbfQueryUtils-BQwCMRdG.js";import"./pbf-DkH7zH7h.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-BviGmGlG.js";import"./queryUtils-DnQsJh_n.js";import"./json-Wa8cmqdu.js";function J(r){const e=r.geometry,i=r.toJSON(),t=i;let n,o,a;return e!=null&&(o=e.spatialReference,a=s(o),t.geometryType=y(e),t.geometry=JSON.stringify(e),t.inSR=a),i.outSR?(t.outSR=s(i.outSR),n=r.outSpatialReference):e&&(t.outSR=t.inSR,n=o),t.bin&&=JSON.stringify(t.bin),t.quantizationParameters&&=JSON.stringify(t.quantizationParameters),t.outStatistics&&=JSON.stringify(t.outStatistics),t.outTimeReference&&=JSON.stringify(t.outTimeReference),r.defaultSpatialReference&&S(o,n)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function N(r,e,i){return O(r,e,i)}async function O(r,e,i={}){const t=typeof r=="string"?m(r):r,n=e.geometry?[e.geometry]:[],o=await f(n,null,{signal:i.signal}),a=o?.[0];a!=null&&((e=e.clone()).geometry=a);const u=R({...t.query,f:"json",...J(e)});return c(p(t.path,"queryBins"),{...i,query:{...u,...i.query}})}async function j(r,e,i){const{data:t}=await N(l(r),g.from(e),i);return d.fromJSON(t)}export{j as executeBinsQuery};
