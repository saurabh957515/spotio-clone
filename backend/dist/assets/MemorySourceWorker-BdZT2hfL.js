import{s as I,cZ as M,c_ as Q,ag as A,ah as C,d0 as F,cY as S,aI as v}from"./index-IeegpAPg.js";import{e as O,n as $,t as k}from"./featureConversionUtils-6nDzGVaS.js";import{t as P,n as G}from"./objectIdUtils-BmFjqQA3.js";import{m as L}from"./FeatureStore-DmWJhoz6.js";import{x as E,j as _}from"./queryUtils-DnQsJh_n.js";import{V as W}from"./QueryEngine-B_4jw8oK.js";import{a as z,u as H,l as U}from"./clientSideDefaults-8WnztZUi.js";import{j as B,f as g,p as T,d as j,y as w}from"./sourceUtils-DksodUJu.js";import{Z as D}from"./FieldsIndex-1XykZMxf.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-XOTfmvKy.js";import"./PooledRBush-DP3eGRuy.js";import"./timeSupport-CnzjLscW.js";import"./optimizedFeatureQueryEngineAdapter-Dms_VuRJ.js";import"./json-Wa8cmqdu.js";import"./LRUCache-B9Ch9jyy.js";import"./WhereClause-DbgZ3DzV.js";import"./TimeOnly-B5mfw6we.js";import"./UnknownTimeZone-Bp45PPyc.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./quantizationUtils-D5PvWHeA.js";import"./utils-CbNSqnaG.js";import"./heatmapUtils-gC4I9bES.js";import"./vec42-DVf6basU.js";import"./vec4f64-CMoMXWBi.js";import"./utils-DK90Hjo4.js";import"./utils-DIsahhBE.js";import"./ClassBreaksDefinition-C6O4AXtE.js";import"./capabilities-Y9lFlGVh.js";import"./defaultsJSON-GKolV7NZ.js";import"./date-Dw3OHnFv.js";const N=S,V={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:S},J={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0}};function K(h){return v(h)?h.z!=null:!!h.hasZ}function Y(h){return v(h)?h.m!=null:!!h.hasM}class Se{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const s=[],{features:a}=e,r=this._inferLayerProperties(a,e.fields),l=e.fields||[],d=e.hasM!=null?e.hasM:!!r.hasM,c=e.hasZ!=null?e.hasZ:!!r.hasZ,p=!e.spatialReference&&!r.spatialReference,u=p?N:e.spatialReference||r.spatialReference,y=p?V:null,f=e.geometryType||r.geometryType,o=!f;let t=e.objectIdField||r.objectIdField,n=e.timeInfo;const m=new D(l);if(!o&&(p&&s.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(r.objectIdField&&t!==r.objectIdField&&(s.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${r.objectIdField}", found in the provided fields`}),t=r.objectIdField),t&&!r.objectIdField){const i=m.get(t);i?(t=i.name,i.type="esriFieldTypeOID",i.editable=!1,i.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const i of l){if(i.name==null&&(i.name=i.alias),i.alias==null&&(i.alias=i.name),!i.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:i});if(i.name===t&&(i.type="esriFieldTypeOID"),!M.jsonValues.includes(i.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${i.name}"`,{field:i});i.length==null&&(i.length=Q(i))}const b={};for(const i of l)if(i.type!=="esriFieldTypeOID"&&i.type!=="esriFieldTypeGlobalID"){const q=A(i);q!==void 0&&(b[i.name]=q)}if(n){if(n.startTimeField){const i=m.get(n.startTimeField);i?(n.startTimeField=i.name,i.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const i=m.get(n.endTimeField);i?(n.endTimeField=i.name,i.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const i=m.get(n.trackIdField);i?n.trackIdField=i.name:(n.trackIdField=null,s.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(s.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const x=m.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??C}:null;this._createDefaultAttributes=z(b,t);const R={warnings:s,featureErrors:[],layerDefinition:{...J,drawingInfo:H(f),templates:U(b),extent:y,geometryType:f,objectIdField:t,fields:l,hasZ:c,hasM:d,timeInfo:n,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new W({fieldsIndex:D.fromLayerJSON({fields:l,timeInfo:n,dateFieldsTimeReference:x}),geometryType:f,hasM:d,hasZ:c,objectIdField:t,spatialReference:u,featureStore:new L({geometryType:f,hasM:d,hasZ:c}),timeInfo:n}),!a?.length)return this._nextObjectId=P,R;const Z=G(t,a);return this._nextObjectId=Z+1,await E(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:s,geometryType:a}=this._queryEngine;return await Promise.all([B(s,a),E(e.adds,s),E(e.updates,s)]),this._applyEdits(e)}queryFeatures(e,s={}){return this._queryEngine.executeQuery(e,s.signal)}queryFeatureCount(e,s={}){return this._queryEngine.executeQueryForCount(e,s.signal)}queryObjectIds(e,s={}){return this._queryEngine.executeQueryForIds(e,s.signal)}queryExtent(e,s={}){return this._queryEngine.executeQueryForExtent(e,s.signal)}querySnapping(e,s={}){return this._queryEngine.executeQueryForSnapping(e,s.signal)}_inferLayerProperties(e,s){let a,r,l=null,d=null,c=null;for(const p of e){const u=p.geometry;if(u!=null&&(l||(l=F(u)),d||(d=u.spatialReference),a==null&&(a=K(u)),r==null&&(r=Y(u)),l&&d&&a!=null&&r!=null))break}if(s&&s.length){let p=null;s.some(u=>{const y=u.type==="esriFieldTypeOID",f=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return p=u,y||f})&&(c=p.name)}return{geometryType:l,spatialReference:d,objectIdField:c,hasM:r,hasZ:a}}async _loadInitialFeatures(e,s){const{geometryType:a,hasM:r,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine,y=[];for(const t of s){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==F(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const n=this._createDefaultAttributes(),m=T(u,n,t.attributes,!0);m?e.featureErrors.push(m):(this._assignObjectId(n,t.attributes,!0),t.attributes=n,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(O([],y,a,l,r,d));const{fullExtent:f,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,o){const{start:t,end:n}=o;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}async _applyEdits(e){const{adds:s,updates:a,deletes:r}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(s?.length&&this._applyAddEdits(l,s),a?.length&&this._applyUpdateEdits(l,a),r?.length){for(const p of r)l.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(r)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,s){const{addResults:a}=e,{geometryType:r,hasM:l,hasZ:d,objectIdField:c,spatialReference:p,featureStore:u,fieldsIndex:y}=this._queryEngine,f=[];for(const o of s){if(o.geometry&&r!==F(o.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=T(y,t,o.attributes);if(n)a.push(n);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const m=o.attributes[c];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??p;o.geometry=_(w(o.geometry,m),m,p)}f.push(o),a.push(j(o.attributes[c]))}}u.addMany(O([],f,r,d,l,c))}_applyUpdateEdits({updateResults:e},s){const{geometryType:a,hasM:r,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine;for(const y of s){const{attributes:f,geometry:o}=y,t=f?.[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const n=$(p.getFeature(t),a,l,r);if(o!=null){if(a!==F(o)){e.push(g("Incorrect geometry type."));continue}const m=o.spatialReference??c;n.geometry=_(w(o,m),m,c)}if(f){const m=T(u,n.attributes,f);if(m){e.push(m);continue}}p.add(k(n,a,l,r,d)),e.push(j(t))}}_assignObjectId(e,s,a=!1){const r=this._queryEngine.objectIdField;a&&s&&isFinite(s[r])?e[r]=s[r]:e[r]=this._nextObjectId++}}export{Se as default};
